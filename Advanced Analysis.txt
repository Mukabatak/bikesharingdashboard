Advanced Analysis

Menerapkan teknik analisis lanjutan seperti RFM analysis, geoanalysis, clustering, dll. 
(Tanpa menggunakan algoritma machine learning). 
Saya akan mencoba melakukan clustering tanpa menggunakan machine learning.
Dengan keterbatasan data pada bikesharing dataset ini, saya akan melakukan clustering menggunakan data temp, hum & windspeed.

Berdasarkan hasil korelasi sebelumnya, Saya berasumsi bahwa semakin tinggi suhu semakin rendah kelembapan dan semakin rendah kecepatan angin maka hari tersebut merupakan hari yang baik untuk bersepeda.
Jadi hasil dari clustering ini diharapkan dapat menentukan apa hari tersebut merupakan hari baik untuk bersepeda atau tidak.

#Membuat ranking untuk mengurutkan karakter

bikesharing_df['t_rank'] = bikesharing_df['temp'].rank(ascending=False)
bikesharing_df['h_rank'] = bikesharing_df['hum'].rank(ascending=True)
bikesharing_df['w_rank'] = bikesharing_df['windspeed'].rank(ascending=True)

bikesharing_df.head()

# normalizing the rank of the customers

bikesharing_df['t_rank_norm'] = (bikesharing_df['t_rank']/bikesharing_df['t_rank'].max())*100
bikesharing_df['h_rank_norm'] = (bikesharing_df['h_rank']/bikesharing_df['h_rank'].max())*100
bikesharing_df['w_rank_norm'] = (bikesharing_df['w_rank']/bikesharing_df['w_rank'].max())*100

bikesharing_df.drop(columns=['t_rank', 'h_rank', 'w_rank'], inplace=True)

bikesharing_df.head()

#saya menitikberatkan pada temperatur lalu variabel lainnya, temp 0.6, hum & windspeed 0.2

bikesharing_df['day_score'] = 0.6*bikesharing_df['t_rank_norm']+0.2 * \
    bikesharing_df['h_rank_norm']+0.2*bikesharing_df['w_rank_norm']
bikesharing_df['day_score'] *= 0.05
bikesharing_df = bikesharing_df.round(2)
bikesharing_df[['dteday', 'day_score']].head(7)

Asumsi: Clustering berdasarkan day_score dimana dibawah 3 merupakan hari yang baik untuk bersepeda, 3-4 normal day dan lebih dari 4 merupakan hari yang buruk untuk bersepeda

bikesharing_df["day_clustering"] = np.where(
    bikesharing_df['day_score'] > 4.2, "Bad day", ( np.where(
                bikesharing_df['day_score'] > 3.5, 'Normal day', 'Good day')))

bikesharing_df[['instant', 'day_score', 'day_clustering']].head(20)

#groupby dan pengecekan
day_clustering_df = bikesharing_df.groupby(by="day_clustering", as_index=False).dteday.nunique()
day_clustering_df

#pengelompokan
day_clustering_df['day_clustering'] = pd.Categorical(day_clustering_df['day_clustering'], [
    "Good day", "Normal day", "Bad day"
])

#visualisasi barchart
plt.figure(figsize=(10, 5))
colors_ = ["#72BCD4", "#D3D3D3", "#D3D3D3"]

sns.barplot(
    x="dteday",
    y="day_clustering",
    data=day_clustering_df.sort_values(by="day_clustering", ascending=False),
    palette=colors_
)
plt.title("Number of Good Day for Riding a Bike (2011-2012)", loc="center", fontsize=15)
plt.ylabel(None)
plt.xlabel(None)
plt.tick_params(axis='y', labelsize=12)
plt.show()

Hasil yang didapat bahwa sepanjan 2 tahun (2011-2012) terdapat hampir 600 hari yang baik untuk bersepeda berdasarkan clustering yg saya buat.
Sedangkan cuma 11 hari yang buruk untuk bersepeda. Terima kasih.

